set(CMAKE_SYSTEM_NAME Linux)

set(PLATFORM_LIBS rt m pthread dl)
set(ARCH armv8Qcs610)

set(CPU_ARCH armv8)
set(OPERATING_SYSTEM Qcs610)

if (DEFINED ENV{QCS610_SDK_PATH} AND NOT DEFINED QCS610_SDK_PATH)
    set(QCS610_SDK_PATH $ENV{QCS610_SDK_PATH})
endif ()

if (NOT DEFINED QCS610_SDK_PATH)
    set(QCS610_SDK_PATH $ENV{HOME}/QCS610_standalone_sdk)
endif ()

message(STATUS "QCS610_SDK_PATH: ${QCS610_SDK_PATH}")

set(QCS610_SYSROOT_PATH $ENV{SDKTARGETSYSROOT})
message(STATUS "QCS610_SYSROOT_PATH: ${QCS610_SYSROOT_PATH}")
set(TARGET_COMPILER_PREFIX $ENV{CROSS_COMPILE})
message(STATUS "TARGET_COMPILER_PREFIX: ${TARGET_COMPILER_PREFIX}")

set(CMAKE_CXX_COMPILER ${TARGET_COMPILER_PREFIX}g++)
message(STATUS "CXX compiler: ${CMAKE_CXX_COMPILER}")
set(CMAKE_C_COMPILER ${TARGET_COMPILER_PREFIX}gcc)
message(STATUS "C compiler: ${CMAKE_C_COMPILER}")

set(CMAKE_CROSSCOMPILING TRUE)

# root filesystem containing shared libs
set(CMAKE_SYSROOT "${QCS610_SYSROOT_PATH}")
set(LINUX_ROOTFS ${QCS610_SYSROOT_PATH})
set(CMAKE_FIND_ROOT_PATH ${LINUX_ROOTFS})

if (USE_SNPE)
    message("We are using SNPE Inference Engine")
endif ()

# linker flags
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)


